<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jee
       http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util.xsd
       http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring
       http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

    <!-- use ehcache at the dao level to minimise DB calls -->
    <ehcache:annotation-driven />

    <!-- configure caching of elements with a cache manager -->
    <ehcache:config cache-manager="cacheManager">
        <ehcache:evict-expired-elements interval="60" />
    </ehcache:config>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="configLocation" value="/WEB-INF/ehcache.xml" />
    </bean>

    <!-- Conan Pipeline DAO, used in several places to fetch loaded pipelines -->
    <bean name="conanPipelineDAO" class="uk.ac.ebi.fgpt.conan.dao.XMLLoadingPipelineDAO">
        <property name="processDAO" ref="conanProcessDAO" />
        <property name="userDAO" ref="databaseUserDAO" />
    </bean>

    <!-- Conan Process DAO, used by Pipeline DAO to fetch available processes -->
    <bean name="conanProcessDAO" class="uk.ac.ebi.fgpt.conan.dao.SpiDiscoveringProcessDAO">
        <property name="conanProperties" ref="conanProperties" />
    </bean>

    <!-- Conan User DAOs - database and LDAP versions -->
    <bean name="databaseUserDAO" class="uk.ac.ebi.fgpt.conan.dao.DatabaseConanUserDAO">
        <property name="jdbcTemplate" ref="conanJdbcTemplate" />
    </bean>

    <bean name="ldapUserDAO" class="uk.ac.ebi.fgpt.conan.dao.LdapConanUserDAO">
        <property name="ldapTemplate" ref="ldapTemplate" />
    </bean>

    <bean name="conanTaskDAO" class="uk.ac.ebi.fgpt.conan.dao.DatabaseConanTaskDAO">
        <property name="pipelineDAO" ref="conanPipelineDAO" />
        <property name="userDAO" ref="databaseUserDAO" />
        <property name="jdbcTemplate" ref="conanJdbcTemplate" />
        <property name="conanTaskListeners">
            <util:set value-type="uk.ac.ebi.fgpt.conan.core.task.ConanTaskListener">
                <ref bean="taskListener" />
            </util:set>
        </property>
    </bean>

    <bean name="ae1SubmitterDetailsDAO" class="uk.ac.ebi.fgpt.conan.ae.dao.SubmitterDetailsFromAE1DAO">
        <property name="jdbcTemplate" ref="ae1JdbcTemplate" />
    </bean>

    <bean name="ae2SubmitterDetailsDAO" class="uk.ac.ebi.fgpt.conan.ae.dao.SubmitterDetailsFromAE2DAO">
        <property name="jdbcTemplate" ref="ae2JdbcTemplate" />
    </bean>

    <bean name="ae1DaemonDAO" class="uk.ac.ebi.fgpt.conan.ae.dao.DaemonInputsForAE1DAO">
        <property name="jdbcTemplate" ref="autosubsJdbcTemplate" />
    </bean>

    <bean name="ae2DaemonDAO" class="uk.ac.ebi.fgpt.conan.ae.dao.DaemonInputsForAE2DAO">
        <property name="jdbcTemplate" ref="autosubsJdbcTemplate" />
    </bean>

    <!--template for retrieving persisted data from Conan DB via jdbc -->
    <bean name="conanJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="conanDataSource" />
    </bean>

    <!--template for retrieving persisted data from Conan DB via jdbc -->
    <bean name="ae1JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="ae1DataSource" />
    </bean>

    <!--template for retrieving persisted data from Conan DB via jdbc -->
    <bean name="ae2JdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="ae2DataSource" />
    </bean>

    <!-- template for retrieving data from Submissions Tracking -->
    <bean name="autosubsJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="autosubsDataSource" />
    </bean>

    <!-- template for retrieving persisted data via ldap -->
    <bean name="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
        <property name="contextSource" ref="contextSource" />
    </bean>

    <bean name="contextSource" class="org.springframework.ldap.core.support.LdapContextSource">
        <property name="anonymousReadOnly" value="true" />
        <property name="url" value="ldap://ldap.ebi.ac.uk:389" />
        <property name="base" value="ou=people,dc=ebi,dc=ac,dc=uk" />
    </bean>

    <!--
    Properties required by arrayexpress processes...

    # TEST
    conan.mode = TEST
    environment.path = /ebi/microarray/home/arrayexpress/ae2_perftest
    experiment.load.directory = /ebi/microarray/home/arrayexpress/ae2_perftest/data/EXPERIMENT/
    array.load.directory = /ebi/microarray/home/arrayexpress/ae2_perftest/data/ARRAY/
    experiment.mageml.directory = /ebi/microarray/ma-subs/AE-CUR/subs/conan_test
    array.mageml.directory = /ebi/microarray/ma-subs/AE-CUR/subs/conan_test/ARRAYS
    ftp.path = /ebi/microarray/home/ftpcrane-test
    ftp.directory = ftp://ftp.ebi.ac.uk/pub/databases/microarray/data/experiment/

    # PRODUCTION
    conan.mode =
    ftp.directory =
    ftp.path =
    environment.path =
    experiment.load.directory =
    array.load.directory =
    experiment.mageml.directory = /ebi/microarray/ma-exp/EXPERIMENTS/
    array.mageml.directory = /ebi/microarray/ma-subs/AE/subs/ARRAYS

    -->

    <!-- Conan properties, initialized from the properties file and wraps a singleton -->
    <bean name="conanProperties"
          class="uk.ac.ebi.fgpt.conan.properties.ConanProperties"
          factory-method="getConanProperties">
        <property name="propertiesFile" ref="conanPropertiesFile" />
    </bean>

    <!-- JNDI declaration of required datasources -->
    <jee:jndi-lookup id="conanDataSource"
                     jndi-name="/jdbc/CONAN"
                     resource-ref="true" />

    <jee:jndi-lookup id="ae1DataSource"
                     jndi-name="/jdbc/AE1"
                     resource-ref="true" />

    <jee:jndi-lookup id="ae2DataSource"
                     jndi-name="/jdbc/AE2"
                     resource-ref="true" />

    <jee:jndi-lookup id="autosubsDataSource"
                     jndi-name="/jdbc/AUTOSUBS"
                     resource-ref="true" />

    <jee:jndi-lookup id="mailSession"
                     jndi-name="/mail/SESSION"
                     resource-ref="true" />

    <jee:jndi-lookup id="conanPropertiesFile"
                     jndi-name="/file/CONAN_PROPERTIES"
                     resource-ref="true" />

</beans>